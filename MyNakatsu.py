import numpy as np
import matplotlib.pyplot as plt
import numpy as np

"""
s1:
    String A = m, String B = n
s2:

"""
# initial
# A, B string
# strA = "bcdabab"
# strB = "cbacbaaba"
# m = len(strA)
# n = len(strB)

# Two Time Series
pre1y = [-0.79042, -0.76517, -0.73354, -0.69963, -0.66774, -0.63863, -0.61181, -0.58728, -0.5643, -0.54438, -0.52935,
         -0.5175, -0.50887, -0.50228, -0.49419, -0.48777, -0.48244, -0.47509, -0.47222, -0.46985, -0.46459, -0.46352,
         -0.46143, -0.45761, -0.45909, -0.46014, -0.45923, -0.45788, -0.44819, -0.43071, -0.40776, -0.3747, -0.33276,
         -0.2768, -0.19645, -0.090298, 0.047421, 0.2205, 0.4261, 0.67133, 0.96248, 1.3002, 1.6832, 2.0961, 2.5103,
         2.8951, 3.2194, 3.4628, 3.621, 3.6996, 3.7129, 3.6775, 3.6059, 3.5102, 3.3997, 3.2801, 3.1584, 3.0381, 2.9193,
         2.8006, 2.676, 2.5378, 2.3817, 2.2061, 2.0162, 1.8208, 1.6266, 1.4393, 1.2597, 1.0847, 0.91676, 0.75766,
         0.60808, 0.47629, 0.36106, 0.25887, 0.17309, 0.096471, 0.026894, -0.032236, -0.087307, -0.1369, -0.17931,
         -0.22133, -0.25955, -0.29338, -0.32834, -0.35884, -0.38534, -0.41342, -0.437, -0.45785, -0.48019, -0.49755,
         -0.51223, -0.52641, -0.536, -0.54405, -0.55164, -0.55638, -0.56113, -0.56549, -0.56759, -0.56959, -0.56966,
         -0.56603, -0.56026, -0.54948, -0.5322, -0.50996, -0.48015, -0.44343, -0.4024, -0.35675, -0.30783, -0.2563,
         -0.20004, -0.13875, -0.0727, -0.0028484, 0.066369, 0.13059, 0.18612, 0.22915, 0.25895, 0.2759, 0.27963,
         0.27232, 0.25625, 0.23374, 0.20941, 0.18572, 0.16234, 0.13869, 0.11209, 0.080644, 0.045686, 0.0078176, -0.0317,
         -0.070879, -0.10997, -0.14719, -0.18032, -0.20995, -0.23491, -0.2559, -0.27537, -0.29212, -0.30676, -0.32039,
         -0.33221, -0.34381, -0.35484, -0.36277, -0.36673, -0.36361, -0.35116, -0.33013, -0.29944, -0.26041, -0.21724,
         -0.1718, -0.12815, -0.090836, -0.059735, -0.036372, -0.021981, -0.01589, -0.020298, -0.036849, -0.064752,
         -0.10373, -0.1509, -0.20149, -0.25293, -0.30208, -0.34683, -0.38841, -0.4262, -0.45982, -0.49066, -0.51698,
         -0.53882, -0.55823, -0.57462, -0.58842, -0.59955, -0.60572, -0.60698, -0.60415, -0.59771, -0.58913, -0.57675,
         -0.55773, -0.53128, -0.49612, -0.4541, -0.40953, -0.36356, -0.31831, -0.27612, -0.23687, -0.20282, -0.1761,
         -0.15669, -0.1454, -0.142, -0.14501, -0.15405, -0.16792, -0.18515, -0.20586, -0.22969, -0.25636, -0.28638,
         -0.31836, -0.35074, -0.38312, -0.41367, -0.44169, -0.4673, -0.48928, -0.50759, -0.52279, -0.53471, -0.54438,
         -0.55209, -0.55728, -0.56031, -0.56033, -0.5569, -0.55111, -0.54236, -0.53119, -0.51937, -0.50656, -0.49434,
         -0.48419, -0.47553, -0.46873, -0.46286, -0.45629, -0.4493, -0.44203, -0.43526, -0.43086, -0.42919, -0.43047,
         -0.43509, -0.44231, -0.45208, -0.46455, -0.47856, -0.49294, -0.50625, -0.51695, -0.52585, -0.5354, -0.54844,
         -0.5674, -0.59232, -0.62175, -0.65471, -0.69032, -0.72764, -0.76425, -0.79486, -0.81473, -0.82271, -0.82133]

pre2y = [-0.87406, -0.8438, -0.82536, -0.81015, -0.79103, -0.7657, -0.74347, -0.72379, -0.70604, -0.68873, -0.66598,
         -0.64613, -0.62478, -0.60472, -0.5884, -0.57013, -0.55668, -0.53885, -0.51669, -0.48978, -0.45123, -0.40553,
         -0.34266, -0.26196, -0.16141, -0.034225, 0.11943, 0.31252, 0.55019, 0.83667, 1.1703, 1.5337, 1.9083, 2.2639,
         2.576, 2.8307, 3.0245, 3.1704, 3.2767, 3.3506, 3.3915, 3.3948, 3.3636, 3.2975, 3.2021, 3.0815, 2.9383, 2.7801,
         2.6076, 2.4265, 2.24, 2.0546, 1.8795, 1.7151, 1.5634, 1.4177, 1.2779, 1.1489, 1.033, 0.94175, 0.87118, 0.82348,
         0.79465, 0.77478, 0.7646, 0.7489, 0.7255, 0.68867, 0.63446, 0.57364, 0.50401, 0.43453, 0.36404, 0.28879,
         0.21323, 0.13161, 0.050432, -0.02959, -0.1072, -0.17629, -0.24058, -0.29663, -0.34702, -0.39266, -0.4305,
         -0.46426, -0.49215, -0.5176, -0.54165, -0.56231, -0.58267, -0.6005, -0.61845, -0.63528, -0.64697, -0.65388,
         -0.6532, -0.64934, -0.64493, -0.64068, -0.63846, -0.63525, -0.63268, -0.6313, -0.6314, -0.63482, -0.63858,
         -0.64288, -0.6476, -0.65259, -0.66201, -0.67396, -0.68819, -0.70277, -0.7145, -0.72688, -0.73952, -0.75455,
         -0.77121, -0.78551, -0.79871, -0.80931, -0.81965, -0.82943, -0.83431, -0.83168, -0.81509, -0.78144, -0.7266,
         -0.64691, -0.54387, -0.42064, -0.28784, -0.15664, -0.037201, 0.061686, 0.13826, 0.19094, 0.22269, 0.23828,
         0.24162, 0.24039, 0.23611, 0.22968, 0.21826, 0.19497, 0.1599, 0.11143, 0.055447, -0.0013555, -0.05622,
         -0.10257, -0.14158, -0.17017, -0.18705, -0.19381, -0.18836, -0.17584, -0.15557, -0.12966, -0.098455, -0.057909,
         -0.0087795, 0.05542, 0.13428, 0.22713, 0.33134, 0.43752, 0.54156, 0.63498, 0.71474, 0.78037, 0.83038, 0.86831,
         0.89179, 0.90006, 0.89145, 0.86316, 0.81806, 0.75658, 0.68283, 0.60116, 0.5145, 0.42885, 0.34462, 0.26288,
         0.18242, 0.10151, 0.02328, -0.052236, -0.12156, -0.18451, -0.24135, -0.28965, -0.33165, -0.3642, -0.38835,
         -0.4034, -0.40704, -0.40356, -0.39212, -0.37771, -0.36168, -0.34318, -0.32698, -0.3125, -0.30492, -0.30474,
         -0.30919, -0.31885, -0.33015, -0.34589, -0.36645, -0.39007, -0.41628, -0.44053, -0.46383, -0.48724, -0.51192,
         -0.53924, -0.56551, -0.58891, -0.60718, -0.62008, -0.62964, -0.6356, -0.63921, -0.63996, -0.63834, -0.63633,
         -0.63398, -0.63348, -0.63464, -0.63806, -0.6447, -0.65323, -0.66399, -0.67479, -0.68453, -0.693, -0.69984,
         -0.70725, -0.71577, -0.72628, -0.73826, -0.75012, -0.76141, -0.77066, -0.7776, -0.78168, -0.78233, -0.78036,
         -0.77621, -0.77191, -0.769, -0.76804, -0.76914, -0.77092, -0.77414, -0.78048, -0.79167, -0.80831, -0.82832,
         -0.85112, -0.87714, -0.9065, -0.93625, -0.95921, -0.97052, -0.97086]
# pre3y = [-0.6909,-0.68937,-0.68576,-0.67816,-0.67202,-0.66672,-0.65943,-0.65336,-0.64989,-0.64526,-0.64031,-0.6373,-0.63154,-0.62233,-0.61419,-0.60429,-0.59165,-0.57942,-0.5604,-0.52525,-0.46654,-0.36869,-0.21556,0.0031705,0.29385,0.65434,1.0682,1.5082,1.9433,2.3417,2.6786,2.943,3.1355,3.2648,3.3451,3.3901,3.4086,3.407,3.3884,3.3534,3.3034,3.2395,3.1623,3.0718,2.9673,2.8475,2.7117,2.5612,2.3989,2.2291,2.0565,1.8851,1.7167,1.5519,1.3896,1.2279,1.0669,0.90703,0.74944,0.59948,0.45974,0.3299,0.21373,0.11076,0.016808,-0.06612,-0.13656,-0.19862,-0.25332,-0.29927,-0.34174,-0.38428,-0.42173,-0.45574,-0.48932,-0.51599,-0.53755,-0.55804,-0.57305,-0.58354,-0.5939,-0.60274,-0.61045,-0.61972,-0.62787,-0.63073,-0.62878,-0.6235,-0.61541,-0.60943,-0.61029,-0.61532,-0.62304,-0.6331,-0.64173,-0.64829,-0.655,-0.66163,-0.66736,-0.6728,-0.67776,-0.68116,-0.68378,-0.68683,-0.68907,-0.69013,-0.69097,-0.69017,-0.68727,-0.68354,-0.67729,-0.66686,-0.65166,-0.62957,-0.59851,-0.55811,-0.50834,-0.44925,-0.38275,-0.31169,-0.23814,-0.16485,-0.094956,-0.029636,0.029938,0.08197,0.12671,0.16439,0.19429,0.21722,0.23385,0.24379,0.24737,0.24562,0.23929,0.2296,0.21839,0.20627,0.19262,0.17714,0.15931,0.1388,0.11706,0.095694,0.075257,0.056375,0.038818,0.021646,0.0050001,-0.010669,-0.025267,-0.03817,-0.049235,-0.059154,-0.067785,-0.074846,-0.081119,-0.087123,-0.092943,-0.10002,-0.10948,-0.11991,-0.13112,-0.14403,-0.15645,-0.16879,-0.18317,-0.19862,-0.21515,-0.23414,-0.25445,-0.27484,-0.29593,-0.31744,-0.33798,-0.35813,-0.37853,-0.39745,-0.41465,-0.4309,-0.44398,-0.45357,-0.4612,-0.46563,-0.46705,-0.46671,-0.46351,-0.45655,-0.44598,-0.4307,-0.40962,-0.38299,-0.35083,-0.31281,-0.27017,-0.22469,-0.17736,-0.13054,-0.087049,-0.047614,-0.013466,0.014233,0.036212,0.052396,0.061965,0.064991,0.061444,0.051345,0.035999,0.017142,-0.0041973,-0.027369,-0.052,-0.078436,-0.10678,-0.13603,-0.16533,-0.19416,-0.22183,-0.24872,-0.27571,-0.30276,-0.32964,-0.35585,-0.38013,-0.40172,-0.42085,-0.43774,-0.45283,-0.46708,-0.48067,-0.49293,-0.50409,-0.51451,-0.52361,-0.5323,-0.54167,-0.55064,-0.55932,-0.56808,-0.57567,-0.58216,-0.58842,-0.59403,-0.59897,-0.6039,-0.60852,-0.61244,-0.61619,-0.61991,-0.62304,-0.62577,-0.62822,-0.62961,-0.63021,-0.63074,-0.63116,-0.63197,-0.63358,-0.63561,-0.6381,-0.64174,-0.64712,-0.65474,-0.6645,-0.67502,-0.68411,-0.69017,-0.69269,-0.69234]
# pre4y = [-0.71468,-0.69977,-0.67568,-0.64516,-0.61724,-0.5906,-0.56309,-0.53802,-0.51149,-0.48359,-0.46086,-0.44034,-0.42125,-0.40803,-0.39602,-0.38434,-0.37544,-0.35917,-0.3265,-0.26959,-0.17101,-0.021447,0.17887,0.42731,0.70545,0.98644,1.2489,1.4731,1.6505,1.7882,1.8955,1.9838,2.0644,2.141,2.2157,2.2916,2.3693,2.4516,2.5415,2.639,2.744,2.8543,2.9637,3.0662,3.1531,3.2145,3.2432,3.2338,3.1837,3.0961,2.977,2.8342,2.6779,2.5153,2.3517,2.1907,2.0293,1.8643,1.6939,1.5135,1.3248,1.1345,0.94656,0.76869,0.60736,0.46052,0.32843,0.20959,0.097698,-0.0057449,-0.099139,-0.18518,-0.25931,-0.32105,-0.3762,-0.42232,-0.46125,-0.49883,-0.5305,-0.55701,-0.58328,-0.60476,-0.62304,-0.64249,-0.65794,-0.66992,-0.68149,-0.68794,-0.6909,-0.69439,-0.69495,-0.69412,-0.69477,-0.69347,-0.69132,-0.69072,-0.68939,-0.68792,-0.68748,-0.6856,-0.68267,-0.68059,-0.67899,-0.67916,-0.68232,-0.68644,-0.69051,-0.69406,-0.69497,-0.69242,-0.68559,-0.67177,-0.64967,-0.61907,-0.57956,-0.53284,-0.48107,-0.4254,-0.36858,-0.31308,-0.25959,-0.20935,-0.16204,-0.11607,-0.072868,-0.034389,-0.0024712,0.019809,0.032512,0.038166,0.038408,0.035867,0.032271,0.02688,0.019984,0.011757,0.0012103,-0.011033,-0.024147,-0.037346,-0.047954,-0.053089,-0.050714,-0.039193,-0.018629,0.0094034,0.043075,0.079759,0.11693,0.15249,0.18344,0.20704,0.22086,0.22181,0.20874,0.18229,0.14377,0.097273,0.047428,-0.0027448,-0.049976,-0.093013,-0.13328,-0.17155,-0.20952,-0.24969,-0.29197,-0.33603,-0.38157,-0.42577,-0.4667,-0.50407,-0.53635,-0.56363,-0.58773,-0.6078,-0.62386,-0.63749,-0.64715,-0.65346,-0.65934,-0.66375,-0.66754,-0.67232,-0.67528,-0.67645,-0.6775,-0.67733,-0.67709,-0.67761,-0.67632,-0.67253,-0.66636,-0.65672,-0.64411,-0.62813,-0.60625,-0.57726,-0.54089,-0.49747,-0.4494,-0.39903,-0.34788,-0.29823,-0.25246,-0.21247,-0.18006,-0.1555,-0.13761,-0.12549,-0.11875,-0.11754,-0.12259,-0.13364,-0.1492,-0.16758,-0.18707,-0.20663,-0.22636,-0.2464,-0.26683,-0.28773,-0.30861,-0.32897,-0.34859,-0.36694,-0.38374,-0.39901,-0.41225,-0.42345,-0.43298,-0.44076,-0.44765,-0.45463,-0.46174,-0.4698,-0.47903,-0.48869,-0.49915,-0.51019,-0.5211,-0.53232,-0.54336,-0.55339,-0.56265,-0.57057,-0.57687,-0.58255,-0.58793,-0.59346,-0.6,-0.6069,-0.61344,-0.6194,-0.62396,-0.62705,-0.62933,-0.63069,-0.63144,-0.63225,-0.63307,-0.63434,-0.63675,-0.64032,-0.6458,-0.65425,-0.66572,-0.67973,-0.69452,-0.7069]

# Two Time Series Index
m = len(pre1y)
n = len(pre2y)
matrix = np.array([[0 for i in range(m + 1)] for i in range(m + 1)])
matchA = [float('inf') for i in range(m + 1)]
matchB = [float('Inf') for i in range(m + 1)]

pos = 0
MAX = 0

while MAX <= m - pos:
    posA = pos
    LCS = 1
    lowerB = 0
    while posA < m and lowerB < n:
        upperB = n - 1
        posB = lowerB
        while posB <= upperB and abs(pre1y[posA] - pre2y[posB]) > 0.2:  # Match or not
            posB = posB + 1
        if posB <= upperB:
            if lowerB == upperB:
                pass
            elif lowerB == posB or lowerB != 0:
                lowerB += 1
            else:
                lowerB = posB
        else:
            break
        matrix[LCS - 1, posA] = lowerB
        if lowerB == -1:
            LCS = LCS - 1
        MAX = max(MAX, LCS)
        if matrix[LCS - 1, posA] < matchB[posA - pos]:
            matchA[posA - pos] = posA
            matchB[posA - pos] = matrix[LCS - 1, posA]
        LCS = LCS + 1
        posA = posA + 1
    pos = pos + 1

p1y_word50 = np.array(pre1y[::])
p2y_word50 = np.array(pre2y[::])
x1 = np.array([x for x in range(len(p1y_word50))])
x2 = np.array([x for x in range(len(p2y_word50))])

# Data Range
plt.xlim(0, 280)
plt.ylim(-1, 5)

plt.plot(x1, p1y_word50, 'b:')
plt.plot(x2, p2y_word50, 'r:')

# Set Label Name
plt.ylabel("Value")
plt.xlabel("time(s)")
plt.title("50Words")

plt.hlines
#  two time series index

ci = 0

# print(len(pre1y), len(matchA), len(matchB))
for a,b in zip(matchA, matchB):
    if a != float('inf') or b != float('inf'):
        try:
            plt.plot([a, b], [pre1y[a], pre2y[b]], 'c')
        except:
            print(str(a)+" "+str(b))

plt.show()

print(len(pre1y), len(pre2y))
print(matrix)
print(matchA)
print(matchB)



# check sumA, sumB length
# sumA = 0
# sumB = 0
# for _ in matchA:
#     if _ != float('inf'):
#         sumA+=1
# for _ in matchB:
#     if _ != float('inf'):
#         sumB+=1
#
# print(sumA, sumB)
